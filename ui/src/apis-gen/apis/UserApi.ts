/* tslint:disable */
/* eslint-disable */
/**
 * 轻舟 RestAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LoginCommand,
  QzResponseOfLoginResponse,
} from '../models/index';
import {
    LoginCommandFromJSON,
    LoginCommandToJSON,
    QzResponseOfLoginResponseFromJSON,
    QzResponseOfLoginResponseToJSON,
} from '../models/index';

export interface UserLoginRequest {
    loginCommand: LoginCommand;
}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI {

    /**
     */
    async userLoginRaw(requestParameters: UserLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QzResponseOfLoginResponse>> {
        if (requestParameters['loginCommand'] == null) {
            throw new runtime.RequiredError(
                'loginCommand',
                'Required parameter "loginCommand" was null or undefined when calling userLogin().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/User/Login`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginCommandToJSON(requestParameters['loginCommand']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QzResponseOfLoginResponseFromJSON(jsonValue));
    }

    /**
     */
    async userLogin(requestParameters: UserLoginRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QzResponseOfLoginResponse> {
        const response = await this.userLoginRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
