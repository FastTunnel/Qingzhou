/* tslint:disable */
/* eslint-disable */
/**
 * Qz.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateProjectRequest,
  CreateProjectResponseQzResponse,
  ListProjectRequest,
  ListProjectResponseQzResponse,
} from '../models/index';
import {
    CreateProjectRequestFromJSON,
    CreateProjectRequestToJSON,
    CreateProjectResponseQzResponseFromJSON,
    CreateProjectResponseQzResponseToJSON,
    ListProjectRequestFromJSON,
    ListProjectRequestToJSON,
    ListProjectResponseQzResponseFromJSON,
    ListProjectResponseQzResponseToJSON,
} from '../models/index';

export interface ApiOrganizationOrganizationIdProjectsCreateProjectPostRequest {
    organizationId: string;
    createProjectRequest?: CreateProjectRequest;
}

export interface ApiOrganizationOrganizationIdProjectsListProjectsGetRequest {
    organizationId: string;
    listProjectRequest?: ListProjectRequest;
}

/**
 * 
 */
export class ProjectsApi extends runtime.BaseAPI {

    /**
     */
    async apiOrganizationOrganizationIdProjectsCreateProjectPostRaw(requestParameters: ApiOrganizationOrganizationIdProjectsCreateProjectPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateProjectResponseQzResponse>> {
        if (requestParameters['organizationId'] == null) {
            throw new runtime.RequiredError(
                'organizationId',
                'Required parameter "organizationId" was null or undefined when calling apiOrganizationOrganizationIdProjectsCreateProjectPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Organization/{organizationId}/Projects/createProject`.replace(`{${"organizationId"}}`, encodeURIComponent(String(requestParameters['organizationId']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateProjectRequestToJSON(requestParameters['createProjectRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateProjectResponseQzResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiOrganizationOrganizationIdProjectsCreateProjectPost(requestParameters: ApiOrganizationOrganizationIdProjectsCreateProjectPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateProjectResponseQzResponse> {
        const response = await this.apiOrganizationOrganizationIdProjectsCreateProjectPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiOrganizationOrganizationIdProjectsListProjectsGetRaw(requestParameters: ApiOrganizationOrganizationIdProjectsListProjectsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListProjectResponseQzResponse>> {
        if (requestParameters['organizationId'] == null) {
            throw new runtime.RequiredError(
                'organizationId',
                'Required parameter "organizationId" was null or undefined when calling apiOrganizationOrganizationIdProjectsListProjectsGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Organization/{organizationId}/Projects/listProjects`.replace(`{${"organizationId"}}`, encodeURIComponent(String(requestParameters['organizationId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
            body: ListProjectRequestToJSON(requestParameters['listProjectRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListProjectResponseQzResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiOrganizationOrganizationIdProjectsListProjectsGet(requestParameters: ApiOrganizationOrganizationIdProjectsListProjectsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListProjectResponseQzResponse> {
        const response = await this.apiOrganizationOrganizationIdProjectsListProjectsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
