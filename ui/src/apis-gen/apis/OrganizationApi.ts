/* tslint:disable */
/* eslint-disable */
/**
 * 轻舟 RestAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateOrganizationRequest,
  QzResponseOfListMembersResponse2,
  QzResponseOfListOrgResponse,
  QzResponseOfString,
} from '../models/index';
import {
    CreateOrganizationRequestFromJSON,
    CreateOrganizationRequestToJSON,
    QzResponseOfListMembersResponse2FromJSON,
    QzResponseOfListMembersResponse2ToJSON,
    QzResponseOfListOrgResponseFromJSON,
    QzResponseOfListOrgResponseToJSON,
    QzResponseOfStringFromJSON,
    QzResponseOfStringToJSON,
} from '../models/index';

export interface OrganizationCreateOrganizationRequest {
    createOrganizationRequest: CreateOrganizationRequest;
}

export interface OrganizationDeleteOrganizationRequest {
    id?: number;
}

/**
 * 
 */
export class OrganizationApi extends runtime.BaseAPI {

    /**
     */
    async organizationCreateOrganizationRaw(requestParameters: OrganizationCreateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QzResponseOfListMembersResponse2>> {
        if (requestParameters['createOrganizationRequest'] == null) {
            throw new runtime.RequiredError(
                'createOrganizationRequest',
                'Required parameter "createOrganizationRequest" was null or undefined when calling organizationCreateOrganization().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Organization/createOrganization`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CreateOrganizationRequestToJSON(requestParameters['createOrganizationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QzResponseOfListMembersResponse2FromJSON(jsonValue));
    }

    /**
     */
    async organizationCreateOrganization(requestParameters: OrganizationCreateOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QzResponseOfListMembersResponse2> {
        const response = await this.organizationCreateOrganizationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async organizationDeleteOrganizationRaw(requestParameters: OrganizationDeleteOrganizationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QzResponseOfString>> {
        const queryParameters: any = {};

        if (requestParameters['id'] != null) {
            queryParameters['Id'] = requestParameters['id'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Organization/DeleteOrganization`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QzResponseOfStringFromJSON(jsonValue));
    }

    /**
     */
    async organizationDeleteOrganization(requestParameters: OrganizationDeleteOrganizationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QzResponseOfString> {
        const response = await this.organizationDeleteOrganizationRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async organizationListOrganizationsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QzResponseOfListOrgResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Organization/listOrganizations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QzResponseOfListOrgResponseFromJSON(jsonValue));
    }

    /**
     */
    async organizationListOrganizations(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QzResponseOfListOrgResponse> {
        const response = await this.organizationListOrganizationsRaw(initOverrides);
        return await response.value();
    }

}
