/* tslint:disable */
/* eslint-disable */
/**
 * Qz.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateOrganizationRequest,
  CreateOrganizationResponseQzResponse,
  ListOrgResponseQzResponse,
  StringQzResponse,
} from '../models/index';
import {
    CreateOrganizationRequestFromJSON,
    CreateOrganizationRequestToJSON,
    CreateOrganizationResponseQzResponseFromJSON,
    CreateOrganizationResponseQzResponseToJSON,
    ListOrgResponseQzResponseFromJSON,
    ListOrgResponseQzResponseToJSON,
    StringQzResponseFromJSON,
    StringQzResponseToJSON,
} from '../models/index';

export interface ApiOrganizationCreateOrganizationPutRequest {
    createOrganizationRequest?: CreateOrganizationRequest;
}

export interface ApiOrganizationDeleteOrganizationDeleteRequest {
    id?: string;
}

/**
 * 
 */
export class OrganizationApi extends runtime.BaseAPI {

    /**
     */
    async apiOrganizationCreateOrganizationPutRaw(requestParameters: ApiOrganizationCreateOrganizationPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateOrganizationResponseQzResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Organization/CreateOrganization`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CreateOrganizationRequestToJSON(requestParameters['createOrganizationRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateOrganizationResponseQzResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiOrganizationCreateOrganizationPut(requestParameters: ApiOrganizationCreateOrganizationPutRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateOrganizationResponseQzResponse> {
        const response = await this.apiOrganizationCreateOrganizationPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiOrganizationDeleteOrganizationDeleteRaw(requestParameters: ApiOrganizationDeleteOrganizationDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringQzResponse>> {
        const queryParameters: any = {};

        if (requestParameters['id'] != null) {
            queryParameters['Id'] = requestParameters['id'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Organization/DeleteOrganization`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StringQzResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiOrganizationDeleteOrganizationDelete(requestParameters: ApiOrganizationDeleteOrganizationDeleteRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringQzResponse> {
        const response = await this.apiOrganizationDeleteOrganizationDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiOrganizationListOrganizationsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListOrgResponseQzResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Organization/ListOrganizations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListOrgResponseQzResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiOrganizationListOrganizationsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListOrgResponseQzResponse> {
        const response = await this.apiOrganizationListOrganizationsGetRaw(initOverrides);
        return await response.value();
    }

}
